<UserControl x:Class="Build_IT_BeamStaticaModule.Views.Preview.BeamPreviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Build_IT_BeamStaticaModule.Views.Preview"
             xmlns:nodes="clr-namespace:Build_IT_BeamStaticaModule.Views.Preview.Nodes"
             xmlns:pointLoads="clr-namespace:Build_IT_BeamStaticaModule.Views.Preview.PointLoads"
             xmlns:continuousLoads="clr-namespace:Build_IT_BeamStaticaModule.Views.Preview.ContinuousLoads"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:results ="clr-namespace:Build_IT_BeamStaticaModule.Views.Preview.Results"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Text="PREVIEW" 
                   Style="{StaticResource MainHeaderTextBlock}"
                   HorizontalAlignment="Center"
                   Margin="15" 
                   VerticalAlignment="Top"/>
        <Border Background="{StaticResource GrayBrush}" 
                Grid.Row="1"
                BorderThickness="1"
                BorderBrush="{StaticResource BlueBrush}"
                Margin="15"                
                x:Name="border">
            <Grid>

                <Grid HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                      Margin="5">
                    <local:ShowsView/>
                </Grid>
                <Grid HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Margin="5">
                    <local:ValuesView />
                </Grid>

                <Viewbox Stretch="Uniform"
                 VerticalAlignment="Stretch"
                 HorizontalAlignment="Stretch"
                 ClipToBounds="True"     
                         RenderOptions.BitmapScalingMode="LowQuality"
                         RenderOptions.CachingHint="Cache"
                 x:Name="viewBox">
                <Grid 
                    Margin="30"
                 Width="{Binding Length}"
                    MinWidth="{Binding ElementName=border, Path=ActualWidth}"
                 Height="{Binding ElementName=border, Path=ActualHeight}">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="{Binding ElementName=border, Path=ActualHeight, 
                                        Converter={StaticResource MathConverter},ConverterParameter=x/2}"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="False">
                                            <Condition.Binding>
                                                <MultiBinding Converter="{StaticResource IsGreaterThanConverter}">
                                                    <Binding Path="Length" />
                                                    <Binding ElementName="border" Path="ActualWidth" />
                                                </MultiBinding>
                                            </Condition.Binding>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                            <TranslateTransform>
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="(y-x)/2">
                                                        <Binding Path="Length" />
                                                        <Binding ElementName="border" Path="ActualWidth" />
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                                    <TranslateTransform.Y>
                                                        <Binding ElementName="border" 
                                                                 Path="ActualHeight"
                                                                 Converter="{StaticResource MathConverter}"
                                                                 ConverterParameter="x/2"/>
                                                    </TranslateTransform.Y>
                                                </TranslateTransform>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <ItemsControl ItemsSource="{Binding Spans}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas>
                                    <Line X1="{Binding StartPoint}" 
                                  X2="{Binding EndPoint}"
                                  Y1="0" 
                                  Y2="0"
                                  StrokeThickness="5"
                                  Stroke="{StaticResource WhiteBrush}"/>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl ItemsSource="{Binding Spans}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Canvas>
                                <nodes:Node NodeType="{Binding SpanViewModel.LeftNode.Type}"
                                                Side="Left"
                                            Angle="{Binding SpanViewModel.LeftNode.Angle}"
                                                Visibility="{Binding SpanViewModel.IsFirstSpan, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Canvas.Left="{Binding StartPoint}"
                                   Canvas.Top="0"/>

                                        <Canvas>
                                            <ItemsControl ItemsSource="{Binding SpanViewModel.LeftNode.PointLoads}"
                                                      Canvas.Left="{Binding StartPoint}"
                                   Canvas.Top="0">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Canvas>
                                                            <pointLoads:PointLoad PointLoadType="{Binding Type}"
                                                                                  Angle="{Binding Angle}"
                                                                          Value="{Binding Value}"></pointLoads:PointLoad>
                                                        </Canvas>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Canvas>
                                        <nodes:Node NodeType="{Binding SpanViewModel.RightNode.Type}"
                                                Side="Right"
                                            Angle="{Binding SpanViewModel.RightNode.Angle}"
                                        Canvas.Left="{Binding EndPoint}"
                                   Canvas.Top="0"/>
                                        <Canvas>
                                            <ItemsControl ItemsSource="{Binding SpanViewModel.RightNode.PointLoads}"
                                                      Canvas.Left="{Binding EndPoint}"
                                   Canvas.Top="0">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Canvas>
                                                            <pointLoads:PointLoad PointLoadType="{Binding Type}"
                                                                                  Angle="{Binding Angle}"
                                                                          Value="{Binding Value}"/>
                                                        </Canvas>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Canvas>

                                        <ItemsControl ItemsSource="{Binding SpanViewModel.PointLoads}"
                                                      Canvas.Left="{Binding StartPoint}"
                                                      Canvas.Top="0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Canvas>
                                                        <pointLoads:PointLoad PointLoadType="{Binding Type}"
                                                                                  Angle="{Binding Angle}"
                                                                          Value="{Binding Value}"
                                                                              Canvas.Left="{Binding Position, Converter={StaticResource MathConverter}, ConverterParameter=x*100 }"/>
                                                    </Canvas> 
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>


                                        <ItemsControl ItemsSource="{Binding SpanViewModel.ContinuousLoads}"
                                                      Canvas.Left="{Binding StartPoint}"
                                                      Canvas.Top="0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Canvas>
                                                        <continuousLoads:ContinuousLoad ContinuousLoadType="{Binding Type}"
                                                                                  Angle="{Binding Angle}"
                                                                          StartValue="{Binding StartValue}"
                                                                          EndValue="{Binding EndValue}"
                                                                              StartPosition="{Binding StartPosition}"
                                                                                         EndPosition="{Binding EndPosition}"
                                                                                        SpanLength="{Binding SpanLength}"/>
                                                    </Canvas>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.BendingMoments}"
                                            ShowResults="{Binding ShowBendingMoment}"
                                            Scale="{Binding BendingMomentScale}"
                                            ResultBrush="Blue"
                                            ConnectToBeam="True"
                                            Multiplier="2"
                                            Unit="kNm"/>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.ShearForces}"
                                            ShowResults="{Binding ShowShearForces}"
                                            Scale="{Binding ShearScale}"
                                            ResultBrush="Red"
                                            ConnectToBeam="True"
                                            Multiplier="-4"
                                            Unit="kN"/>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.NormalForces}"
                                            ShowResults="{Binding ShowNormalForces}"
                                            Scale="{Binding NormalScale}"
                                            ResultBrush="Brown"
                                            ConnectToBeam="True"
                                            Multiplier="-4"
                                            Unit="kN"/>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.VerticalDeflections}"
                                            ShowResults="{Binding ShowVerticalDeflections}"
                                            Scale="{Binding VerticalDeflectionScale}"
                                            ResultBrush="Green"
                                            ConnectToBeam="False"
                                            Multiplier="-10"
                                            Unit="mm"/>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.HorizontalDeflections}"
                                            ShowResults="{Binding ShowHorizontalDeflections}"
                                            Scale="{Binding HorizontalDeflectionScale}"
                                            ResultBrush="Yellow"
                                            ConnectToBeam="False"
                                            Multiplier="-100"
                                            Unit="mm"/>

                        <results:ResultView ResultValues="{Binding BeamCalculationResult.Rotations}"
                                            ShowResults="{Binding ShowRotations}"
                                            Scale="{Binding RotationScale}"
                                            ResultBrush="Purple"
                                            ConnectToBeam="False"
                                            Multiplier="-5000"
                                            Unit="rad"/>                    
                      
                        <Line X1="{Binding Position, Converter={StaticResource MathConverter},ConverterParameter=x*100}"
                          X2="{Binding Position, Converter={StaticResource MathConverter},ConverterParameter=x*100}"
                          Y1="-100"
                          Y2="100"
                              Visibility="{Binding ShowValues, Converter={StaticResource BoolToVisibilityConverter}}"
                          StrokeThickness="1"
                          Stroke="Gray"
                          StrokeDashArray="20 20"/>
                    </Grid>
                </Viewbox>
            </Grid>
        </Border>
    </Grid>
</UserControl>
